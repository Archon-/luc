Ext.data.JsonP.Luc({"tagname":"class","name":"Luc","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Luc","members":{"cfg":[],"property":[{"name":"A","tagname":"property","owner":"Luc","meta":{},"id":"property-A"},{"name":"F","tagname":"property","owner":"Luc","meta":{},"id":"property-F"},{"name":"O","tagname":"property","owner":"Luc","meta":{},"id":"property-O"}],"method":[{"name":"abstractFn","tagname":"method","owner":"Luc","meta":{},"id":"method-abstractFn"},{"name":"apply","tagname":"method","owner":"Luc","meta":{},"id":"method-apply"},{"name":"compare","tagname":"method","owner":"Luc","meta":{},"id":"method-compare"},{"name":"emptyFn","tagname":"method","owner":"Luc","meta":{},"id":"method-emptyFn"},{"name":"mix","tagname":"method","owner":"Luc","meta":{},"id":"method-mix"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":2,"files":[{"filename":"luc.js","href":"luc.html#Luc"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/luc.html#Luc' target='_blank'>luc.js</a></div></pre><div class='doc-contents'><p>Aliases for common Luc methods and packages.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-A' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc'>Luc</span><br/><a href='source/luc.html#Luc-property-A' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc-property-A' class='name not-expandable'>A</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p><a href=\"#!/api/Luc-property-A\" rel=\"Luc-property-A\" class=\"docClass\">Luc.A</a>\nAlias for <a href=\"#!/api/Luc.Array\" rel=\"Luc.Array\" class=\"docClass\">Luc.Array</a></p>\n</div><div class='long'><p><a href=\"#!/api/Luc-property-A\" rel=\"Luc-property-A\" class=\"docClass\">Luc.A</a>\nAlias for <a href=\"#!/api/Luc.Array\" rel=\"Luc.Array\" class=\"docClass\">Luc.Array</a></p>\n</div></div></div><div id='property-F' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc'>Luc</span><br/><a href='source/luc.html#Luc-property-F' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc-property-F' class='name not-expandable'>F</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p><a href=\"#!/api/Luc-property-F\" rel=\"Luc-property-F\" class=\"docClass\">Luc.F</a>\nAlias for <a href=\"#!/api/Luc.Function\" rel=\"Luc.Function\" class=\"docClass\">Luc.Function</a></p>\n</div><div class='long'><p><a href=\"#!/api/Luc-property-F\" rel=\"Luc-property-F\" class=\"docClass\">Luc.F</a>\nAlias for <a href=\"#!/api/Luc.Function\" rel=\"Luc.Function\" class=\"docClass\">Luc.Function</a></p>\n</div></div></div><div id='property-O' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc'>Luc</span><br/><a href='source/luc.html#Luc-property-O' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc-property-O' class='name not-expandable'>O</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'><p><a href=\"#!/api/Luc-property-O\" rel=\"Luc-property-O\" class=\"docClass\">Luc.O</a>\nAlias for <a href=\"#!/api/Luc.Object\" rel=\"Luc.Object\" class=\"docClass\">Luc.Object</a></p>\n</div><div class='long'><p><a href=\"#!/api/Luc-property-O\" rel=\"Luc-property-O\" class=\"docClass\">Luc.O</a>\nAlias for <a href=\"#!/api/Luc.Object\" rel=\"Luc.Object\" class=\"docClass\">Luc.Object</a></p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-abstractFn' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc'>Luc</span><br/><a href='source/luc.html#Luc-method-abstractFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc-method-abstractFn' class='name expandable'>abstractFn</a>( <span class='pre'></span> ) : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></div><div class='description'><div class='short'>A function that throws an error when called. ...</div><div class='long'><p>A function that throws an error when called.\nUseful when defining abstract like classes</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-apply' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc'>Luc</span><br/><a href='source/luc.html#Luc-method-apply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc-method-apply' class='name expandable'>apply</a>( <span class='pre'>toObject, fromObject</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>Apply the properties from fromObject to the toObject. ...</div><div class='long'><p>Apply the properties from fromObject to the toObject.  fromObject will\noverwrite any shared keys.  It can also be used as a simple shallow clone.</p>\n\n<pre><code>var to = {a:1, c:1}, from = {a:2, b:2}\n<a href=\"#!/api/Luc.Object-method-apply\" rel=\"Luc.Object-method-apply\" class=\"docClass\">Luc.Object.apply</a>(to, from)\n&gt;Object {a: 2, c: 1, b: 2}\nto === to\n&gt;true\nvar clone = <a href=\"#!/api/Luc.Object-method-apply\" rel=\"Luc.Object-method-apply\" class=\"docClass\">Luc.Object.apply</a>({}, from)\n&gt;undefined\nclone\n&gt;Object {a: 2, b: 2}\nclone === from\n&gt;false\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toObject</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>|undefined<div class='sub-desc'><p>Object to put the properties fromObject on.</p>\n</div></li><li><span class='pre'>fromObject</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>|undefined<div class='sub-desc'><p>Object to put the properties on the toObject</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>the toObject</p>\n</div></li></ul></div></div></div><div id='method-compare' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc'>Luc</span><br/><a href='source/compare.html#Luc-method-compare' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc-method-compare' class='name expandable'>compare</a>( <span class='pre'>val1, val2, [config]</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></div><div class='description'><div class='short'>Return true if the values are equal to each\nother. ...</div><div class='long'><p>Return true if the values are equal to each\nother.  By default a shallow comparison is\ndone on arrays, dates and objects and a strict comparison\nis done on other types.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val1</span> : Any<div class='sub-desc'>\n</div></li><li><span class='pre'>val2</span> : Any<div class='sub-desc'>\n</div></li><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'>\n<ul><li><span class='pre'>type</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>pass in 'deep' for a deep\ncomparison, 'shallow' (default) for a shallow comparison\nor 'strict' for a strict === comparison for all objects.</p>\n\n<pre><code><a href=\"#!/api/Luc-method-compare\" rel=\"Luc-method-compare\" class=\"docClass\">Luc.compare</a>({a: 1}, {a: 1})\n&gt;true\n<a href=\"#!/api/Luc-method-compare\" rel=\"Luc-method-compare\" class=\"docClass\">Luc.compare</a>({a: 1, b: {}}, {a: 1, b: {} })\n&gt;false\n<a href=\"#!/api/Luc-method-compare\" rel=\"Luc-method-compare\" class=\"docClass\">Luc.compare</a>({a: 1, b: {}}, {a: 1, b: {} }, {type: 'deep'})\n&gt;true\n<a href=\"#!/api/Luc-method-compare\" rel=\"Luc-method-compare\" class=\"docClass\">Luc.compare</a>({a: 1, b: {}}, {a: 1, b: {} }, {type: 'strict'})\n&gt;false\n</code></pre>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-emptyFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc'>Luc</span><br/><a href='source/luc.html#Luc-method-emptyFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc-method-emptyFn' class='name expandable'>emptyFn</a>( <span class='pre'></span> ) : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></div><div class='description'><div class='short'>A reusable empty function ...</div><div class='long'><p>A reusable empty function</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-mix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc'>Luc</span><br/><a href='source/luc.html#Luc-method-mix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc-method-mix' class='name expandable'>mix</a>( <span class='pre'>toObject, fromObject</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>Similar to Luc.Object.apply except that the fromObject will\nNOT overwrite the keys of the toObject if they are defined. ...</div><div class='long'><p>Similar to <a href=\"#!/api/Luc.Object-method-apply\" rel=\"Luc.Object-method-apply\" class=\"docClass\">Luc.Object.apply</a> except that the fromObject will\nNOT overwrite the keys of the toObject if they are defined.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toObject</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>|undefined<div class='sub-desc'><p>Object to put the properties fromObject on.</p>\n</div></li><li><span class='pre'>fromObject</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>|undefined<div class='sub-desc'><p>Object to put the properties on the toObject</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>the toObject</p>\n</div></li></ul></div></div></div></div></div></div></div>"});