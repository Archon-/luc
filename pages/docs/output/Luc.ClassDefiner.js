Ext.data.JsonP.Luc_ClassDefiner({"tagname":"class","name":"Luc.ClassDefiner","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":true,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Luc.ClassDefiner","members":{"cfg":[{"name":"defaultType","tagname":"cfg","owner":"Luc.ClassDefiner","meta":{},"id":"cfg-defaultType"}],"property":[],"method":[{"name":"getComposition","tagname":"method","owner":"Luc.ClassDefiner","meta":{"private":true},"id":"method-getComposition"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":15,"files":[{"filename":"definer.js","href":"definer.html#Luc-ClassDefiner"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/definer.html#Luc-ClassDefiner' target='_blank'>definer.js</a></div></pre><div class='doc-contents'><p>Singleton that <a href=\"#!/api/Luc.define-method-define\" rel=\"Luc.define-method-define\" class=\"docClass\">Luc.define</a> uses to define classes.  The defualt type can\nbe changed to any Constructor</p>\n\n<pre><code>function MyClass(){};\n<a href=\"#!/api/Luc.ClassDefiner-cfg-defaultType\" rel=\"Luc.ClassDefiner-cfg-defaultType\" class=\"docClass\">Luc.ClassDefiner.defaultType</a> = MyClass;\nvar C = <a href=\"#!/api/Luc.define\" rel=\"Luc.define\" class=\"docClass\">Luc.define</a>();\nnew C() instanceof <a href=\"#!/api/Luc.Base\" rel=\"Luc.Base\" class=\"docClass\">Luc.Base</a>\n&gt;false\nnew C() instanceof MyClass\n&gt;true\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-defaultType' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.ClassDefiner'>Luc.ClassDefiner</span><br/><a href='source/definer.html#Luc-ClassDefiner-cfg-defaultType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.ClassDefiner-cfg-defaultType' class='name expandable'>defaultType</a><span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span></div><div class='description'><div class='short'>this can be changed to any Constructor. ...</div><div class='long'><p>this can be changed to any Constructor.  Defaults\nto <a href=\"#!/api/Luc.Base\" rel=\"Luc.Base\" class=\"docClass\">Luc.Base</a>.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getComposition' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Luc.ClassDefiner'>Luc.ClassDefiner</span><br/><a href='source/definer.html#Luc-ClassDefiner-method-getComposition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Luc.ClassDefiner-method-getComposition' class='name expandable'>getComposition</a>( <span class='pre'>key</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'>Methods that can get added to the prototype\nthey will be called in the context of the instance. ...</div><div class='long'><p>Methods that can get added to the prototype\nthey will be called in the context of the instance.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});